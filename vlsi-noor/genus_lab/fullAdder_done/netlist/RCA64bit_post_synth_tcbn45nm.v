
// Generated by Cadence Encounter(R) RTL Compiler v14.10-s022_1

// Verification Directory fv/RCA64bit 

module full_Adder(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2;
  ND3D1BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_1), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_2), .ZN (ca));
  XOR3D0BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (cin), .A3 (a), .Z
       (sum));
  ND2D2BWP addinc_add_6_32_1_g21(.A1 (cin), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  ND2D2BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_1));
  ND2D2BWP addinc_add_6_32_1_g23(.A1 (cin), .A2 (a), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_1(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire UNCONNECTED;
  XOR3D0BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  FA1D2BWP g2(.A (a), .B (b), .CI (cin), .CO (ca), .S (UNCONNECTED));
endmodule

module full_Adder_2(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_1), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_2), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  ND2D2BWP addinc_add_6_32_1_g21(.A1 (cin), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  ND2D2BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_1));
  ND2D1BWP addinc_add_6_32_1_g23(.A1 (cin), .A2 (a), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_3(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire UNCONNECTED0;
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  FA1D2BWP g2(.A (a), .B (b), .CI (cin), .CO (ca), .S (UNCONNECTED0));
endmodule

module RCA4bit(a, b, cin, sum, cout);
  input [3:0] a, b;
  input cin;
  output [3:0] sum;
  output cout;
  wire [3:0] a, b;
  wire cin;
  wire [3:0] sum;
  wire cout;
  wire cout1, cout2, cout3;
  full_Adder FA_0(a[0], b[0], cin, sum[0], cout1);
  full_Adder_1 FA_1(a[1], b[1], cout1, sum[1], cout2);
  full_Adder_2 FA_2(a[2], b[2], cout2, sum[2], cout3);
  full_Adder_3 FA_3(a[3], b[3], cout3, sum[3], cout);
endmodule

module full_Adder_4(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire UNCONNECTED1;
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  FA1D2BWP g2(.A (a), .B (b), .CI (cin), .CO (ca), .S (UNCONNECTED1));
endmodule

module full_Adder_5(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_2), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_3), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D1BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_6(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_2), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_3), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D1BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_7(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire UNCONNECTED2;
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  FA1D2BWP g2(.A (a), .B (b), .CI (cin), .CO (ca), .S (UNCONNECTED2));
endmodule

module RCA4bit_1(a, b, cin, sum, cout);
  input [3:0] a, b;
  input cin;
  output [3:0] sum;
  output cout;
  wire [3:0] a, b;
  wire cin;
  wire [3:0] sum;
  wire cout;
  wire cout1, cout2, cout3;
  full_Adder_4 FA_0(.a (a[0]), .b (b[0]), .cin (cin), .sum (sum[0]),
       .ca (cout1));
  full_Adder_5 FA_1(.a (a[1]), .b (b[1]), .cin (cout1), .sum (sum[1]),
       .ca (cout2));
  full_Adder_6 FA_2(.a (a[2]), .b (b[2]), .cin (cout2), .sum (sum[2]),
       .ca (cout3));
  full_Adder_7 FA_3(.a (a[3]), .b (b[3]), .cin (cout3), .sum (sum[3]),
       .ca (cout));
endmodule

module RCA8bit(a, b, cin, sum, cout);
  input [7:0] a, b;
  input cin;
  output [7:0] sum;
  output cout;
  wire [7:0] a, b;
  wire cin;
  wire [7:0] sum;
  wire cout;
  wire cout1;
  RCA4bit RA4_0(a[3:0], b[3:0], cin, sum[3:0], cout1);
  RCA4bit_1 RA4_1(a[7:4], b[7:4], cout1, sum[7:4], cout);
endmodule

module full_Adder_8(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire UNCONNECTED3;
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  FA1D2BWP g2(.A (a), .B (b), .CI (cin), .CO (ca), .S (UNCONNECTED3));
endmodule

module full_Adder_9(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire UNCONNECTED4;
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  FA1D2BWP g2(.A (a), .B (b), .CI (cin), .CO (ca), .S (UNCONNECTED4));
endmodule

module full_Adder_10(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire UNCONNECTED5;
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  FA1D2BWP g2(.A (a), .B (b), .CI (cin), .CO (ca), .S (UNCONNECTED5));
endmodule

module full_Adder_11(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire UNCONNECTED6;
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  FA1D2BWP g2(.A (a), .B (b), .CI (cin), .CO (ca), .S (UNCONNECTED6));
endmodule

module RCA4bit_2(a, b, cin, sum, cout);
  input [3:0] a, b;
  input cin;
  output [3:0] sum;
  output cout;
  wire [3:0] a, b;
  wire cin;
  wire [3:0] sum;
  wire cout;
  wire cout1, cout2, cout3;
  full_Adder_8 FA_0(.a (a[0]), .b (b[0]), .cin (cin), .sum (sum[0]),
       .ca (cout1));
  full_Adder_9 FA_1(.a (a[1]), .b (b[1]), .cin (cout1), .sum (sum[1]),
       .ca (cout2));
  full_Adder_10 FA_2(.a (a[2]), .b (b[2]), .cin (cout2), .sum (sum[2]),
       .ca (cout3));
  full_Adder_11 FA_3(.a (a[3]), .b (b[3]), .cin (cout3), .sum (sum[3]),
       .ca (cout));
endmodule

module full_Adder_12(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire UNCONNECTED7;
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  FA1D2BWP g2(.A (a), .B (b), .CI (cin), .CO (ca), .S (UNCONNECTED7));
endmodule

module full_Adder_13(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_2), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_3), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D1BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_14(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_2), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_3), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D1BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_15(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_2), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_3), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D1BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module RCA4bit_3(a, b, cin, sum, cout);
  input [3:0] a, b;
  input cin;
  output [3:0] sum;
  output cout;
  wire [3:0] a, b;
  wire cin;
  wire [3:0] sum;
  wire cout;
  wire cout1, cout2, cout3;
  full_Adder_12 FA_0(.a (a[0]), .b (b[0]), .cin (cin), .sum (sum[0]),
       .ca (cout1));
  full_Adder_13 FA_1(.a (a[1]), .b (b[1]), .cin (cout1), .sum (sum[1]),
       .ca (cout2));
  full_Adder_14 FA_2(.a (a[2]), .b (b[2]), .cin (cout2), .sum (sum[2]),
       .ca (cout3));
  full_Adder_15 FA_3(.a (a[3]), .b (b[3]), .cin (cout3), .sum (sum[3]),
       .ca (cout));
endmodule

module RCA8bit_1(a, b, cin, sum, cout);
  input [7:0] a, b;
  input cin;
  output [7:0] sum;
  output cout;
  wire [7:0] a, b;
  wire cin;
  wire [7:0] sum;
  wire cout;
  wire cout1;
  RCA4bit_2 RA4_0(.a (a[3:0]), .b (b[3:0]), .cin (cin), .sum
       (sum[3:0]), .cout (cout1));
  RCA4bit_3 RA4_1(.a (a[7:4]), .b (b[7:4]), .cin (cout1), .sum
       (sum[7:4]), .cout (cout));
endmodule

module RCA16bit(a, b, cin, sum, cout);
  input [15:0] a, b;
  input cin;
  output [15:0] sum;
  output cout;
  wire [15:0] a, b;
  wire cin;
  wire [15:0] sum;
  wire cout;
  wire cout1;
  RCA8bit RA4_0(a[7:0], b[7:0], cin, sum[7:0], cout1);
  RCA8bit_1 RA4_1(a[15:8], b[15:8], cout1, sum[15:8], cout);
endmodule

module full_Adder_16(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_2), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_3), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D1BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_17(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire UNCONNECTED8;
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  FA1D2BWP g2(.A (a), .B (b), .CI (cin), .CO (ca), .S (UNCONNECTED8));
endmodule

module full_Adder_18(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_2), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_3), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D1BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_19(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_2), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_3), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D1BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module RCA4bit_4(a, b, cin, sum, cout);
  input [3:0] a, b;
  input cin;
  output [3:0] sum;
  output cout;
  wire [3:0] a, b;
  wire cin;
  wire [3:0] sum;
  wire cout;
  wire cout1, cout2, cout3;
  full_Adder_16 FA_0(.a (a[0]), .b (b[0]), .cin (cin), .sum (sum[0]),
       .ca (cout1));
  full_Adder_17 FA_1(.a (a[1]), .b (b[1]), .cin (cout1), .sum (sum[1]),
       .ca (cout2));
  full_Adder_18 FA_2(.a (a[2]), .b (b[2]), .cin (cout2), .sum (sum[2]),
       .ca (cout3));
  full_Adder_19 FA_3(.a (a[3]), .b (b[3]), .cin (cout3), .sum (sum[3]),
       .ca (cout));
endmodule

module full_Adder_20(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_2), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_3), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D1BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_21(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire UNCONNECTED9;
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  FA1D2BWP g2(.A (a), .B (b), .CI (cin), .CO (ca), .S (UNCONNECTED9));
endmodule

module full_Adder_22(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_2), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_3), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D1BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_23(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_2), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_3), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D1BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module RCA4bit_5(a, b, cin, sum, cout);
  input [3:0] a, b;
  input cin;
  output [3:0] sum;
  output cout;
  wire [3:0] a, b;
  wire cin;
  wire [3:0] sum;
  wire cout;
  wire cout1, cout2, cout3;
  full_Adder_20 FA_0(.a (a[0]), .b (b[0]), .cin (cin), .sum (sum[0]),
       .ca (cout1));
  full_Adder_21 FA_1(.a (a[1]), .b (b[1]), .cin (cout1), .sum (sum[1]),
       .ca (cout2));
  full_Adder_22 FA_2(.a (a[2]), .b (b[2]), .cin (cout2), .sum (sum[2]),
       .ca (cout3));
  full_Adder_23 FA_3(.a (a[3]), .b (b[3]), .cin (cout3), .sum (sum[3]),
       .ca (cout));
endmodule

module RCA8bit_2(a, b, cin, sum, cout);
  input [7:0] a, b;
  input cin;
  output [7:0] sum;
  output cout;
  wire [7:0] a, b;
  wire cin;
  wire [7:0] sum;
  wire cout;
  wire cout1;
  RCA4bit_4 RA4_0(.a (a[3:0]), .b (b[3:0]), .cin (cin), .sum
       (sum[3:0]), .cout (cout1));
  RCA4bit_5 RA4_1(.a (a[7:4]), .b (b[7:4]), .cin (cout1), .sum
       (sum[7:4]), .cout (cout));
endmodule

module full_Adder_24(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_2), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_3), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D1BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_25(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire UNCONNECTED10;
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  FA1D2BWP g2(.A (a), .B (b), .CI (cin), .CO (ca), .S (UNCONNECTED10));
endmodule

module full_Adder_26(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_2), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_3), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D1BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_27(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_2), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_3), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D1BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module RCA4bit_6(a, b, cin, sum, cout);
  input [3:0] a, b;
  input cin;
  output [3:0] sum;
  output cout;
  wire [3:0] a, b;
  wire cin;
  wire [3:0] sum;
  wire cout;
  wire cout1, cout2, cout3;
  full_Adder_24 FA_0(.a (a[0]), .b (b[0]), .cin (cin), .sum (sum[0]),
       .ca (cout1));
  full_Adder_25 FA_1(.a (a[1]), .b (b[1]), .cin (cout1), .sum (sum[1]),
       .ca (cout2));
  full_Adder_26 FA_2(.a (a[2]), .b (b[2]), .cin (cout2), .sum (sum[2]),
       .ca (cout3));
  full_Adder_27 FA_3(.a (a[3]), .b (b[3]), .cin (cout3), .sum (sum[3]),
       .ca (cout));
endmodule

module full_Adder_28(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_2), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_3), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D1BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_29(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_3), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_2), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D2BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_30(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_3), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_2), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D2BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_31(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_3), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_2), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D2BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module RCA4bit_7(a, b, cin, sum, cout);
  input [3:0] a, b;
  input cin;
  output [3:0] sum;
  output cout;
  wire [3:0] a, b;
  wire cin;
  wire [3:0] sum;
  wire cout;
  wire cout1, cout2, cout3;
  full_Adder_28 FA_0(.a (a[0]), .b (b[0]), .cin (cin), .sum (sum[0]),
       .ca (cout1));
  full_Adder_29 FA_1(.a (a[1]), .b (b[1]), .cin (cout1), .sum (sum[1]),
       .ca (cout2));
  full_Adder_30 FA_2(.a (a[2]), .b (b[2]), .cin (cout2), .sum (sum[2]),
       .ca (cout3));
  full_Adder_31 FA_3(.a (a[3]), .b (b[3]), .cin (cout3), .sum (sum[3]),
       .ca (cout));
endmodule

module RCA8bit_3(a, b, cin, sum, cout);
  input [7:0] a, b;
  input cin;
  output [7:0] sum;
  output cout;
  wire [7:0] a, b;
  wire cin;
  wire [7:0] sum;
  wire cout;
  wire cout1;
  RCA4bit_6 RA4_0(.a (a[3:0]), .b (b[3:0]), .cin (cin), .sum
       (sum[3:0]), .cout (cout1));
  RCA4bit_7 RA4_1(.a (a[7:4]), .b (b[7:4]), .cin (cout1), .sum
       (sum[7:4]), .cout (cout));
endmodule

module RCA16bit_1(a, b, cin, sum, cout);
  input [15:0] a, b;
  input cin;
  output [15:0] sum;
  output cout;
  wire [15:0] a, b;
  wire cin;
  wire [15:0] sum;
  wire cout;
  wire cout1;
  RCA8bit_2 RA4_0(.a (a[7:0]), .b (b[7:0]), .cin (cin), .sum
       (sum[7:0]), .cout (cout1));
  RCA8bit_3 RA4_1(.a (a[15:8]), .b (b[15:8]), .cin (cout1), .sum
       (sum[15:8]), .cout (cout));
endmodule

module full_Adder_32(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_3), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_2), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D2BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_33(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_3), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_2), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D2BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_34(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_3), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_2), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D2BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_35(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_3), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_2), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D2BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module RCA4bit_8(a, b, cin, sum, cout);
  input [3:0] a, b;
  input cin;
  output [3:0] sum;
  output cout;
  wire [3:0] a, b;
  wire cin;
  wire [3:0] sum;
  wire cout;
  wire cout1, cout2, cout3;
  full_Adder_32 FA_0(.a (a[0]), .b (b[0]), .cin (cin), .sum (sum[0]),
       .ca (cout1));
  full_Adder_33 FA_1(.a (a[1]), .b (b[1]), .cin (cout1), .sum (sum[1]),
       .ca (cout2));
  full_Adder_34 FA_2(.a (a[2]), .b (b[2]), .cin (cout2), .sum (sum[2]),
       .ca (cout3));
  full_Adder_35 FA_3(.a (a[3]), .b (b[3]), .cin (cout3), .sum (sum[3]),
       .ca (cout));
endmodule

module full_Adder_36(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_3), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_2), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D2BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_37(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_3), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_2), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D2BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_38(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_3), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_2), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D2BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_39(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_3), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_2), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D2BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module RCA4bit_9(a, b, cin, sum, cout);
  input [3:0] a, b;
  input cin;
  output [3:0] sum;
  output cout;
  wire [3:0] a, b;
  wire cin;
  wire [3:0] sum;
  wire cout;
  wire cout1, cout2, cout3;
  full_Adder_36 FA_0(.a (a[0]), .b (b[0]), .cin (cin), .sum (sum[0]),
       .ca (cout1));
  full_Adder_37 FA_1(.a (a[1]), .b (b[1]), .cin (cout1), .sum (sum[1]),
       .ca (cout2));
  full_Adder_38 FA_2(.a (a[2]), .b (b[2]), .cin (cout2), .sum (sum[2]),
       .ca (cout3));
  full_Adder_39 FA_3(.a (a[3]), .b (b[3]), .cin (cout3), .sum (sum[3]),
       .ca (cout));
endmodule

module RCA8bit_4(a, b, cin, sum, cout);
  input [7:0] a, b;
  input cin;
  output [7:0] sum;
  output cout;
  wire [7:0] a, b;
  wire cin;
  wire [7:0] sum;
  wire cout;
  wire cout1;
  RCA4bit_8 RA4_0(.a (a[3:0]), .b (b[3:0]), .cin (cin), .sum
       (sum[3:0]), .cout (cout1));
  RCA4bit_9 RA4_1(.a (a[7:4]), .b (b[7:4]), .cin (cout1), .sum
       (sum[7:4]), .cout (cout));
endmodule

module full_Adder_40(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_3), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_2), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D2BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_41(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_3), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_2), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D2BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_42(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_3), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_2), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D2BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_43(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_3), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_2), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D2BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module RCA4bit_10(a, b, cin, sum, cout);
  input [3:0] a, b;
  input cin;
  output [3:0] sum;
  output cout;
  wire [3:0] a, b;
  wire cin;
  wire [3:0] sum;
  wire cout;
  wire cout1, cout2, cout3;
  full_Adder_40 FA_0(.a (a[0]), .b (b[0]), .cin (cin), .sum (sum[0]),
       .ca (cout1));
  full_Adder_41 FA_1(.a (a[1]), .b (b[1]), .cin (cout1), .sum (sum[1]),
       .ca (cout2));
  full_Adder_42 FA_2(.a (a[2]), .b (b[2]), .cin (cout2), .sum (sum[2]),
       .ca (cout3));
  full_Adder_43 FA_3(.a (a[3]), .b (b[3]), .cin (cout3), .sum (sum[3]),
       .ca (cout));
endmodule

module full_Adder_44(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_3), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_2), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D2BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_45(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_3), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_2), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D2BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_46(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_3), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_2), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D2BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_47(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_3), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_2), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D2BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module RCA4bit_11(a, b, cin, sum, cout);
  input [3:0] a, b;
  input cin;
  output [3:0] sum;
  output cout;
  wire [3:0] a, b;
  wire cin;
  wire [3:0] sum;
  wire cout;
  wire cout1, cout2, cout3;
  full_Adder_44 FA_0(.a (a[0]), .b (b[0]), .cin (cin), .sum (sum[0]),
       .ca (cout1));
  full_Adder_45 FA_1(.a (a[1]), .b (b[1]), .cin (cout1), .sum (sum[1]),
       .ca (cout2));
  full_Adder_46 FA_2(.a (a[2]), .b (b[2]), .cin (cout2), .sum (sum[2]),
       .ca (cout3));
  full_Adder_47 FA_3(.a (a[3]), .b (b[3]), .cin (cout3), .sum (sum[3]),
       .ca (cout));
endmodule

module RCA8bit_5(a, b, cin, sum, cout);
  input [7:0] a, b;
  input cin;
  output [7:0] sum;
  output cout;
  wire [7:0] a, b;
  wire cin;
  wire [7:0] sum;
  wire cout;
  wire cout1;
  RCA4bit_10 RA4_0(.a (a[3:0]), .b (b[3:0]), .cin (cin), .sum
       (sum[3:0]), .cout (cout1));
  RCA4bit_11 RA4_1(.a (a[7:4]), .b (b[7:4]), .cin (cout1), .sum
       (sum[7:4]), .cout (cout));
endmodule

module RCA16bit_2(a, b, cin, sum, cout);
  input [15:0] a, b;
  input cin;
  output [15:0] sum;
  output cout;
  wire [15:0] a, b;
  wire cin;
  wire [15:0] sum;
  wire cout;
  wire cout1;
  RCA8bit_4 RA4_0(.a (a[7:0]), .b (b[7:0]), .cin (cin), .sum
       (sum[7:0]), .cout (cout1));
  RCA8bit_5 RA4_1(.a (a[15:8]), .b (b[15:8]), .cin (cout1), .sum
       (sum[15:8]), .cout (cout));
endmodule

module full_Adder_48(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_3), .A2
       (addinc_add_6_32_1_n_0), .A3 (addinc_add_6_32_1_n_2), .ZN (ca));
  XOR3D1BWP addinc_add_6_32_1_g20(.A1 (b), .A2 (a), .A3 (cin), .Z
       (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  ND2D2BWP addinc_add_6_32_1_g2(.A1 (a), .A2 (cin), .ZN
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_49(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3,
       addinc_add_6_32_1_n_4, addinc_add_6_32_1_n_5;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_5), .A2
       (addinc_add_6_32_1_n_3), .A3 (addinc_add_6_32_1_n_4), .ZN (ca));
  BMLD1BWP addinc_add_6_32_1_g20(.A (addinc_add_6_32_1_n_1), .M0 (a),
       .M1 (addinc_add_6_32_1_n_2), .S (b), .X2
       (addinc_add_6_32_1_n_0), .PP (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_5));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_4));
  IND2D1BWP addinc_add_6_32_1_g23(.A1 (addinc_add_6_32_1_n_2), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  CKND1BWP addinc_add_6_32_1_g24(.I (a), .ZN (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  BUFFD0BWP addinc_add_6_32_1_fopt(.I (cin), .Z
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_50(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3,
       addinc_add_6_32_1_n_4, addinc_add_6_32_1_n_5;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_5), .A2
       (addinc_add_6_32_1_n_3), .A3 (addinc_add_6_32_1_n_4), .ZN (ca));
  BMLD1BWP addinc_add_6_32_1_g20(.A (addinc_add_6_32_1_n_1), .M0 (a),
       .M1 (addinc_add_6_32_1_n_2), .S (b), .X2
       (addinc_add_6_32_1_n_0), .PP (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_5));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_4));
  IND2D1BWP addinc_add_6_32_1_g23(.A1 (addinc_add_6_32_1_n_2), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  CKND1BWP addinc_add_6_32_1_g24(.I (a), .ZN (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  BUFFD0BWP addinc_add_6_32_1_fopt(.I (cin), .Z
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_51(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3,
       addinc_add_6_32_1_n_4, addinc_add_6_32_1_n_5;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_5), .A2
       (addinc_add_6_32_1_n_3), .A3 (addinc_add_6_32_1_n_4), .ZN (ca));
  BMLD1BWP addinc_add_6_32_1_g20(.A (addinc_add_6_32_1_n_1), .M0 (a),
       .M1 (addinc_add_6_32_1_n_2), .S (b), .X2
       (addinc_add_6_32_1_n_0), .PP (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_5));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_4));
  IND2D1BWP addinc_add_6_32_1_g23(.A1 (addinc_add_6_32_1_n_2), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  CKND1BWP addinc_add_6_32_1_g24(.I (a), .ZN (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  BUFFD0BWP addinc_add_6_32_1_fopt(.I (cin), .Z
       (addinc_add_6_32_1_n_0));
endmodule

module RCA4bit_12(a, b, cin, sum, cout);
  input [3:0] a, b;
  input cin;
  output [3:0] sum;
  output cout;
  wire [3:0] a, b;
  wire cin;
  wire [3:0] sum;
  wire cout;
  wire cout1, cout2, cout3;
  full_Adder_48 FA_0(.a (a[0]), .b (b[0]), .cin (cin), .sum (sum[0]),
       .ca (cout1));
  full_Adder_49 FA_1(.a (a[1]), .b (b[1]), .cin (cout1), .sum (sum[1]),
       .ca (cout2));
  full_Adder_50 FA_2(.a (a[2]), .b (b[2]), .cin (cout2), .sum (sum[2]),
       .ca (cout3));
  full_Adder_51 FA_3(.a (a[3]), .b (b[3]), .cin (cout3), .sum (sum[3]),
       .ca (cout));
endmodule

module full_Adder_52(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3,
       addinc_add_6_32_1_n_4, addinc_add_6_32_1_n_5;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_5), .A2
       (addinc_add_6_32_1_n_3), .A3 (addinc_add_6_32_1_n_4), .ZN (ca));
  BMLD1BWP addinc_add_6_32_1_g20(.A (addinc_add_6_32_1_n_1), .M0 (a),
       .M1 (addinc_add_6_32_1_n_2), .S (b), .X2
       (addinc_add_6_32_1_n_0), .PP (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_5));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_4));
  IND2D1BWP addinc_add_6_32_1_g23(.A1 (addinc_add_6_32_1_n_2), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  CKND1BWP addinc_add_6_32_1_g24(.I (a), .ZN (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  BUFFD0BWP addinc_add_6_32_1_fopt(.I (cin), .Z
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_53(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3,
       addinc_add_6_32_1_n_4, addinc_add_6_32_1_n_5;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_5), .A2
       (addinc_add_6_32_1_n_3), .A3 (addinc_add_6_32_1_n_4), .ZN (ca));
  BMLD1BWP addinc_add_6_32_1_g20(.A (addinc_add_6_32_1_n_1), .M0 (a),
       .M1 (addinc_add_6_32_1_n_2), .S (b), .X2
       (addinc_add_6_32_1_n_0), .PP (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_5));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_4));
  IND2D1BWP addinc_add_6_32_1_g23(.A1 (addinc_add_6_32_1_n_2), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  CKND1BWP addinc_add_6_32_1_g24(.I (a), .ZN (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  BUFFD0BWP addinc_add_6_32_1_fopt(.I (cin), .Z
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_54(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3,
       addinc_add_6_32_1_n_4, addinc_add_6_32_1_n_5;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_5), .A2
       (addinc_add_6_32_1_n_3), .A3 (addinc_add_6_32_1_n_4), .ZN (ca));
  BMLD1BWP addinc_add_6_32_1_g20(.A (addinc_add_6_32_1_n_1), .M0 (a),
       .M1 (addinc_add_6_32_1_n_2), .S (b), .X2
       (addinc_add_6_32_1_n_0), .PP (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_5));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_4));
  IND2D1BWP addinc_add_6_32_1_g23(.A1 (addinc_add_6_32_1_n_2), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  CKND1BWP addinc_add_6_32_1_g24(.I (a), .ZN (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  BUFFD0BWP addinc_add_6_32_1_fopt(.I (cin), .Z
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_55(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3,
       addinc_add_6_32_1_n_4, addinc_add_6_32_1_n_5;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_5), .A2
       (addinc_add_6_32_1_n_3), .A3 (addinc_add_6_32_1_n_4), .ZN (ca));
  BMLD1BWP addinc_add_6_32_1_g20(.A (addinc_add_6_32_1_n_1), .M0 (a),
       .M1 (addinc_add_6_32_1_n_2), .S (b), .X2
       (addinc_add_6_32_1_n_0), .PP (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_5));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_4));
  IND2D1BWP addinc_add_6_32_1_g23(.A1 (addinc_add_6_32_1_n_2), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  CKND1BWP addinc_add_6_32_1_g24(.I (a), .ZN (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  BUFFD0BWP addinc_add_6_32_1_fopt(.I (cin), .Z
       (addinc_add_6_32_1_n_0));
endmodule

module RCA4bit_13(a, b, cin, sum, cout);
  input [3:0] a, b;
  input cin;
  output [3:0] sum;
  output cout;
  wire [3:0] a, b;
  wire cin;
  wire [3:0] sum;
  wire cout;
  wire cout1, cout2, cout3;
  full_Adder_52 FA_0(.a (a[0]), .b (b[0]), .cin (cin), .sum (sum[0]),
       .ca (cout1));
  full_Adder_53 FA_1(.a (a[1]), .b (b[1]), .cin (cout1), .sum (sum[1]),
       .ca (cout2));
  full_Adder_54 FA_2(.a (a[2]), .b (b[2]), .cin (cout2), .sum (sum[2]),
       .ca (cout3));
  full_Adder_55 FA_3(.a (a[3]), .b (b[3]), .cin (cout3), .sum (sum[3]),
       .ca (cout));
endmodule

module RCA8bit_6(a, b, cin, sum, cout);
  input [7:0] a, b;
  input cin;
  output [7:0] sum;
  output cout;
  wire [7:0] a, b;
  wire cin;
  wire [7:0] sum;
  wire cout;
  wire cout1;
  RCA4bit_12 RA4_0(.a (a[3:0]), .b (b[3:0]), .cin (cin), .sum
       (sum[3:0]), .cout (cout1));
  RCA4bit_13 RA4_1(.a (a[7:4]), .b (b[7:4]), .cin (cout1), .sum
       (sum[7:4]), .cout (cout));
endmodule

module full_Adder_56(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3,
       addinc_add_6_32_1_n_4, addinc_add_6_32_1_n_5;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_5), .A2
       (addinc_add_6_32_1_n_3), .A3 (addinc_add_6_32_1_n_4), .ZN (ca));
  BMLD1BWP addinc_add_6_32_1_g20(.A (addinc_add_6_32_1_n_1), .M0 (a),
       .M1 (addinc_add_6_32_1_n_2), .S (b), .X2
       (addinc_add_6_32_1_n_0), .PP (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_5));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_4));
  IND2D1BWP addinc_add_6_32_1_g23(.A1 (addinc_add_6_32_1_n_2), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  CKND1BWP addinc_add_6_32_1_g24(.I (a), .ZN (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  BUFFD0BWP addinc_add_6_32_1_fopt(.I (cin), .Z
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_57(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3,
       addinc_add_6_32_1_n_4, addinc_add_6_32_1_n_5;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_5), .A2
       (addinc_add_6_32_1_n_3), .A3 (addinc_add_6_32_1_n_4), .ZN (ca));
  BMLD1BWP addinc_add_6_32_1_g20(.A (addinc_add_6_32_1_n_1), .M0 (a),
       .M1 (addinc_add_6_32_1_n_2), .S (b), .X2
       (addinc_add_6_32_1_n_0), .PP (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_5));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_4));
  IND2D1BWP addinc_add_6_32_1_g23(.A1 (addinc_add_6_32_1_n_2), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  CKND1BWP addinc_add_6_32_1_g24(.I (a), .ZN (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  BUFFD0BWP addinc_add_6_32_1_fopt(.I (cin), .Z
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_58(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3,
       addinc_add_6_32_1_n_4, addinc_add_6_32_1_n_5;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_5), .A2
       (addinc_add_6_32_1_n_3), .A3 (addinc_add_6_32_1_n_4), .ZN (ca));
  BMLD1BWP addinc_add_6_32_1_g20(.A (addinc_add_6_32_1_n_1), .M0 (a),
       .M1 (addinc_add_6_32_1_n_2), .S (b), .X2
       (addinc_add_6_32_1_n_0), .PP (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_5));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_4));
  IND2D1BWP addinc_add_6_32_1_g23(.A1 (addinc_add_6_32_1_n_2), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  CKND1BWP addinc_add_6_32_1_g24(.I (a), .ZN (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  BUFFD0BWP addinc_add_6_32_1_fopt(.I (cin), .Z
       (addinc_add_6_32_1_n_0));
endmodule

module full_Adder_59(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3,
       addinc_add_6_32_1_n_4, addinc_add_6_32_1_n_5;
  ND3D2BWP addinc_add_6_32_1_g19(.A1 (addinc_add_6_32_1_n_5), .A2
       (addinc_add_6_32_1_n_3), .A3 (addinc_add_6_32_1_n_4), .ZN (ca));
  BMLD1BWP addinc_add_6_32_1_g20(.A (addinc_add_6_32_1_n_1), .M0 (a),
       .M1 (addinc_add_6_32_1_n_2), .S (b), .X2
       (addinc_add_6_32_1_n_0), .PP (sum));
  IND2D1BWP addinc_add_6_32_1_g21(.A1 (addinc_add_6_32_1_n_1), .B1
       (cin), .ZN (addinc_add_6_32_1_n_5));
  ND2D1BWP addinc_add_6_32_1_g22(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_4));
  IND2D1BWP addinc_add_6_32_1_g23(.A1 (addinc_add_6_32_1_n_2), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  CKND1BWP addinc_add_6_32_1_g24(.I (a), .ZN (addinc_add_6_32_1_n_2));
  CKND1BWP addinc_add_6_32_1_g25(.I (b), .ZN (addinc_add_6_32_1_n_1));
  BUFFD0BWP addinc_add_6_32_1_fopt(.I (cin), .Z
       (addinc_add_6_32_1_n_0));
endmodule

module RCA4bit_14(a, b, cin, sum, cout);
  input [3:0] a, b;
  input cin;
  output [3:0] sum;
  output cout;
  wire [3:0] a, b;
  wire cin;
  wire [3:0] sum;
  wire cout;
  wire cout1, cout2, cout3;
  full_Adder_56 FA_0(.a (a[0]), .b (b[0]), .cin (cin), .sum (sum[0]),
       .ca (cout1));
  full_Adder_57 FA_1(.a (a[1]), .b (b[1]), .cin (cout1), .sum (sum[1]),
       .ca (cout2));
  full_Adder_58 FA_2(.a (a[2]), .b (b[2]), .cin (cout2), .sum (sum[2]),
       .ca (cout3));
  full_Adder_59 FA_3(.a (a[3]), .b (b[3]), .cin (cout3), .sum (sum[3]),
       .ca (cout));
endmodule

module full_Adder_60(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_2,
       addinc_add_6_32_1_n_3, addinc_add_6_32_1_n_4,
       addinc_add_6_32_1_n_5, addinc_add_6_32_1_n_6;
  ND3D2BWP addinc_add_6_32_1_g22(.A1 (addinc_add_6_32_1_n_3), .A2
       (addinc_add_6_32_1_n_4), .A3 (addinc_add_6_32_1_n_5), .ZN (ca));
  XNR2D1BWP addinc_add_6_32_1_g23(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_6));
  ND2D2BWP addinc_add_6_32_1_g24(.A1 (cin), .A2 (b), .ZN
       (addinc_add_6_32_1_n_5));
  ND2D1BWP addinc_add_6_32_1_g25(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_4));
  IND2D1BWP addinc_add_6_32_1_g26(.A1 (addinc_add_6_32_1_n_2), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  CKND1BWP addinc_add_6_32_1_g27(.I (a), .ZN (addinc_add_6_32_1_n_2));
  BUFFD1BWP addinc_add_6_32_1_fopt31(.I (cin), .Z
       (addinc_add_6_32_1_n_0));
  XNR2D1BWP g2(.A1 (addinc_add_6_32_1_n_0), .A2
       (addinc_add_6_32_1_n_6), .ZN (sum));
endmodule

module full_Adder_61(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_2,
       addinc_add_6_32_1_n_3, addinc_add_6_32_1_n_4,
       addinc_add_6_32_1_n_5, addinc_add_6_32_1_n_6;
  ND3D2BWP addinc_add_6_32_1_g22(.A1 (addinc_add_6_32_1_n_3), .A2
       (addinc_add_6_32_1_n_4), .A3 (addinc_add_6_32_1_n_5), .ZN (ca));
  XNR2D1BWP addinc_add_6_32_1_g23(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_6));
  ND2D2BWP addinc_add_6_32_1_g24(.A1 (cin), .A2 (b), .ZN
       (addinc_add_6_32_1_n_5));
  ND2D1BWP addinc_add_6_32_1_g25(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_4));
  IND2D1BWP addinc_add_6_32_1_g26(.A1 (addinc_add_6_32_1_n_2), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  CKND1BWP addinc_add_6_32_1_g27(.I (a), .ZN (addinc_add_6_32_1_n_2));
  BUFFD1BWP addinc_add_6_32_1_fopt31(.I (cin), .Z
       (addinc_add_6_32_1_n_0));
  XNR2D1BWP g2(.A1 (addinc_add_6_32_1_n_0), .A2
       (addinc_add_6_32_1_n_6), .ZN (sum));
endmodule

module full_Adder_62(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_2,
       addinc_add_6_32_1_n_3, addinc_add_6_32_1_n_4,
       addinc_add_6_32_1_n_5, addinc_add_6_32_1_n_6;
  ND3D2BWP addinc_add_6_32_1_g22(.A1 (addinc_add_6_32_1_n_3), .A2
       (addinc_add_6_32_1_n_4), .A3 (addinc_add_6_32_1_n_5), .ZN (ca));
  XNR2D1BWP addinc_add_6_32_1_g23(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_6));
  ND2D2BWP addinc_add_6_32_1_g24(.A1 (cin), .A2 (b), .ZN
       (addinc_add_6_32_1_n_5));
  ND2D1BWP addinc_add_6_32_1_g25(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_4));
  IND2D1BWP addinc_add_6_32_1_g26(.A1 (addinc_add_6_32_1_n_2), .B1
       (cin), .ZN (addinc_add_6_32_1_n_3));
  CKND1BWP addinc_add_6_32_1_g27(.I (a), .ZN (addinc_add_6_32_1_n_2));
  BUFFD1BWP addinc_add_6_32_1_fopt31(.I (cin), .Z
       (addinc_add_6_32_1_n_0));
  XNR2D1BWP g2(.A1 (addinc_add_6_32_1_n_0), .A2
       (addinc_add_6_32_1_n_6), .ZN (sum));
endmodule

module full_Adder_63(a, b, cin, sum, ca);
  input a, b, cin;
  output sum, ca;
  wire a, b, cin;
  wire sum, ca;
  wire addinc_add_6_32_1_n_0, addinc_add_6_32_1_n_1,
       addinc_add_6_32_1_n_2, addinc_add_6_32_1_n_3,
       addinc_add_6_32_1_n_4, addinc_add_6_32_1_n_5;
  MUX2ND0BWP addinc_add_6_32_1_g21(.I0 (addinc_add_6_32_1_n_0), .I1
       (addinc_add_6_32_1_n_1), .S (addinc_add_6_32_1_n_5), .ZN (sum));
  IND3D0BWP addinc_add_6_32_1_g22(.A1 (addinc_add_6_32_1_n_3), .B1
       (addinc_add_6_32_1_n_2), .B2 (addinc_add_6_32_1_n_4), .ZN (ca));
  XNR2D1BWP addinc_add_6_32_1_g23(.A1 (a), .A2 (b), .ZN
       (addinc_add_6_32_1_n_5));
  ND2D1BWP addinc_add_6_32_1_g24(.A1 (cin), .A2 (b), .ZN
       (addinc_add_6_32_1_n_4));
  AN2XD1BWP addinc_add_6_32_1_g25(.A1 (a), .A2 (b), .Z
       (addinc_add_6_32_1_n_3));
  ND2D1BWP addinc_add_6_32_1_g26(.A1 (cin), .A2 (a), .ZN
       (addinc_add_6_32_1_n_2));
  CKND2BWP addinc_add_6_32_1_fopt(.I (addinc_add_6_32_1_n_0), .ZN
       (addinc_add_6_32_1_n_1));
  BUFFD0BWP addinc_add_6_32_1_fopt28(.I (cin), .Z
       (addinc_add_6_32_1_n_0));
endmodule

module RCA4bit_15(a, b, cin, sum, cout);
  input [3:0] a, b;
  input cin;
  output [3:0] sum;
  output cout;
  wire [3:0] a, b;
  wire cin;
  wire [3:0] sum;
  wire cout;
  wire cout1, cout2, cout3;
  full_Adder_60 FA_0(.a (a[0]), .b (b[0]), .cin (cin), .sum (sum[0]),
       .ca (cout1));
  full_Adder_61 FA_1(.a (a[1]), .b (b[1]), .cin (cout1), .sum (sum[1]),
       .ca (cout2));
  full_Adder_62 FA_2(.a (a[2]), .b (b[2]), .cin (cout2), .sum (sum[2]),
       .ca (cout3));
  full_Adder_63 FA_3(.a (a[3]), .b (b[3]), .cin (cout3), .sum (sum[3]),
       .ca (cout));
endmodule

module RCA8bit_7(a, b, cin, sum, cout);
  input [7:0] a, b;
  input cin;
  output [7:0] sum;
  output cout;
  wire [7:0] a, b;
  wire cin;
  wire [7:0] sum;
  wire cout;
  wire cout1;
  RCA4bit_14 RA4_0(.a (a[3:0]), .b (b[3:0]), .cin (cin), .sum
       (sum[3:0]), .cout (cout1));
  RCA4bit_15 RA4_1(.a (a[7:4]), .b (b[7:4]), .cin (cout1), .sum
       (sum[7:4]), .cout (cout));
endmodule

module RCA16bit_3(a, b, cin, sum, cout);
  input [15:0] a, b;
  input cin;
  output [15:0] sum;
  output cout;
  wire [15:0] a, b;
  wire cin;
  wire [15:0] sum;
  wire cout;
  wire cout1;
  RCA8bit_6 RA4_0(.a (a[7:0]), .b (b[7:0]), .cin (cin), .sum
       (sum[7:0]), .cout (cout1));
  RCA8bit_7 RA4_1(.a (a[15:8]), .b (b[15:8]), .cin (cout1), .sum
       (sum[15:8]), .cout (cout));
endmodule

module RCA64bit(a, b, cin, sum, cout);
  input [63:0] a, b;
  input cin;
  output [63:0] sum;
  output cout;
  wire [63:0] a, b;
  wire cin;
  wire [63:0] sum;
  wire cout;
  wire cout1, cout2, cout3;
  RCA16bit RA16_0(a[15:0], b[15:0], cin, sum[15:0], cout1);
  RCA16bit_1 RA16_1(a[31:16], b[31:16], cout1, sum[31:16], cout2);
  RCA16bit_2 RA16_2(a[47:32], b[47:32], cout2, sum[47:32], cout3);
  RCA16bit_3 RA16_3(a[63:48], b[63:48], cout3, sum[63:48], cout);
endmodule

