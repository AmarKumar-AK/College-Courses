$date
	Wed Mar 20 18:03:46 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module RegFileTB $end
$var wire 16 ! dataWritten [15:0] $end
$var wire 16 " dataRead2 [15:0] $end
$var wire 16 # dataRead1 [15:0] $end
$var reg 1 $ Reset $end
$var reg 16 % dataToWrite [15:0] $end
$var reg 4 & read1 [3:0] $end
$var reg 4 ' read2 [3:0] $end
$var reg 4 ( write [3:0] $end
$scope module submodule1 $end
$var wire 16 ) dataRead1 [15:0] $end
$var wire 16 * dataRead2 [15:0] $end
$var wire 16 + dataToWrite [15:0] $end
$var wire 16 , dataWritten [15:0] $end
$var wire 4 - read1 [3:0] $end
$var wire 4 . read2 [3:0] $end
$var wire 1 $ reset $end
$var wire 4 / write [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
1$
bx #
bx "
bx !
$end
#5
b0 "
b0 *
b1 #
b1 )
b1111 '
b1111 .
b0 &
b0 -
0$
#6
b1110 !
b1110 ,
b1111111111111010 %
b1111111111111010 +
b1101 (
b1101 /
#106
